server:
  port: 8088
logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    org.hibernate: ERROR
    com.netflix.eureka: INFO
    com.netflix.discovery: INFO
    org.springframework.web.client.RestTemplate: WARN
management:
  endpoints:
    web:
      exposure:
        include: '*'

eureka:
  client:
    enabled: false
    service-url:
      defaultZone: http://localhost:8761/eureka/

spring:
  servlet:
    multipart:
      max-request-size: 100MB
      max-file-size: 100MB
  data:
    redis:
      host: redis-10935.c15.us-east-1-4.ec2.redns.redis-cloud.com
      port: 10935
      password: bW3JcLNG9plT0R0BV4xRaUmHrOh1cRw4
  application:
    name: post-service
  jpa:
    show-sql: true
    open-in-view: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.id.new_generator_mappings: true
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: true
      hibernate.jdbc.lob.non_contextual_creation: true
      # modify batch size as necessary
      hibernate.jdbc.batch_size: 50
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
      hibernate.format_sql: true

  datasource:
    url: jdbc:postgresql://localhost:5432/social_media_app_post
    username: postgres
    password: 101119
    driver-class-name: org.postgresql.Driver

#  datasource:
#    url: jdbc:postgresql://localhost:5432/social_media_app_post
#    username: postgres
#    password: 101119
#    driver-class-name: org.postgresql.Driver